[{"path":"https://stscl.github.io/esp/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Wenbo Lv. Author, maintainer, copyright holder.","code":""},{"path":"https://stscl.github.io/esp/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lv W (2024). esp: Enhanced Stratified Power. R package version 0.1.0, https://github.com/stscl/esp, https://stscl.github.io/esp/.","code":"@Manual{,   title = {esp: Enhanced Stratified Power},   author = {Wenbo Lv},   year = {2024},   note = {R package version 0.1.0, https://github.com/stscl/esp},   url = {https://stscl.github.io/esp/}, }"},{"path":"https://stscl.github.io/esp/index.html","id":"esp-","dir":"","previous_headings":"","what":"esp | Enhanced Stratified Power\n","title":"esp | Enhanced Stratified Power\n","text":"Enhanced Stratified Power","code":""},{"path":"https://stscl.github.io/esp/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"esp | Enhanced Stratified Power\n","text":"Install CRAN : Install development binary version R-universe : Install development source version GitHub :","code":"install.packages(\"esp\") install.packages('esp',                  repos = c(\"https://stscl.r-universe.dev\",                            \"https://cloud.r-project.org\"),                  dep = TRUE) # install.packages(\"devtools\") devtools::install_github(\"stscl/esp\",                          build_vignettes = TRUE,                          dep = TRUE)"},{"path":"https://stscl.github.io/esp/reference/esp.html","id":null,"dir":"Reference","previous_headings":"","what":"enhanced stratified power — esp","title":"enhanced stratified power — esp","text":"Equivalent geographical detector q-statistic spatial linear regression framework.","code":""},{"path":"https://stscl.github.io/esp/reference/esp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"enhanced stratified power — esp","text":"","code":"esp(   formula,   data,   listw = NULL,   yzone = NULL,   discvar = \"all\",   discnum = 3:8,   model = \"ols\",   Durbin = FALSE,   overlay = \"and\",   alpha = 0.75,   bw = \"AIC\",   adaptive = TRUE,   kernel = \"gaussian\",   increase_rate = 0.05,   cores = 1,   ... )"},{"path":"https://stscl.github.io/esp/reference/esp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"enhanced stratified power — esp","text":"formula formula enhanced stratified power model. data sf object observation data. Please note column names independent variables none. listw (optional) list listw. See spdep::mat2listw() spdep::nb2listw() details. yzone (optional) Spatial zones response variable. Default response variable divided 3 categories using quantile discretization. discvar (optional) Name continuous variable columns need discretized. Noted formula discvar, data must columns. Default , means independent variables used discvar. discvar set none, independent variables need discretized. discnum (optional) Number discretization. Default use 3:8. model (optional) type linear model used, default ols. model value must ols, gwr, lag error. Durbin (optional) Whether consider spatial Durbin terms, default false. overlay (optional) Spatial overlay method. One , , intersection. Default . alpha (optional) Controlling strength spatial soft constraints, larger alpha, stronger spatial soft constraint. Default 0.75. bw (optional) bandwidth used selecting models. optimal bandwidth can selected using one two methods: AIC, CV. Default use AIC. adaptive (optional) Whether bandwidth value adaptive . Default TRUE. kernel (optional) Kernel function. Default gaussian. increase_rate (optional) critical increase rate number discretization. Default 5%. cores (optional) Positive integer (default 1). cores greater 1, use multi-core parallel computing. ... (optional) arguments passed ClustGeo::hclustgeo().","code":""},{"path":"https://stscl.github.io/esp/reference/esp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"enhanced stratified power — esp","text":"list espm class. factor global factor detection result interaction global interactive detection results optdisc independent variable optimal spatial discretization localq q valueS explanatory variables different response zones zone zones response variable allfactor factor detection results corresponding different numbers discreteization model regression model used estimate equivalent q values","code":""},{"path":"https://stscl.github.io/esp/reference/esp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"enhanced stratified power — esp","text":"","code":"NTDs = sf::st_as_sf(gdverse::NTDs, coords = c('X','Y')) g = esp(incidence ~ ., data = NTDs, discvar = 'none',         model = 'ols', overlay = 'intersection', cores = 1) g #> ***           Enhanced Stratified Power      #>  #>  Q values are estimated using *Ordinary Least Square*  #>  #>  ------------- Global Power of Determinat : ------------ #> Variable  Qvalue AIC     BIC     LogLik   #> watershed 0.638  -10.039 -10.039 15.020   #> elevation 0.607  1.183   1.183   7.409    #> soiltype  0.386  79.675  79.675  -33.838  #>  #>  ------------ Global Variable Interaction : ------------ #> Variable                Interaction   #> watershed ∩ elevation Enhance, bi-  #> watershed ∩ soiltype  Enhance, bi-  #> elevation ∩ soiltype  Enhance, bi-  #>  #> ! Only the top ten items of global scale are displayed. #> ! The others can be accessed through specific subsets."},{"path":"https://stscl.github.io/esp/reference/fuzzyoverlay2.html","id":null,"dir":"Reference","previous_headings":"","what":"spatial fuzzy overlay between variables pairwise — fuzzyoverlay2","title":"spatial fuzzy overlay between variables pairwise — fuzzyoverlay2","text":"spatial fuzzy overlay variables pairwise","code":""},{"path":"https://stscl.github.io/esp/reference/fuzzyoverlay2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"spatial fuzzy overlay between variables pairwise — fuzzyoverlay2","text":"","code":"fuzzyoverlay2(formula, data, method = \"and\")"},{"path":"https://stscl.github.io/esp/reference/fuzzyoverlay2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"spatial fuzzy overlay between variables pairwise — fuzzyoverlay2","text":"formula formula. data data.frame tibble discretized data. method (optional) Spatial overlay method. One , , intersection. Default .","code":""},{"path":"https://stscl.github.io/esp/reference/fuzzyoverlay2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"spatial fuzzy overlay between variables pairwise — fuzzyoverlay2","text":"list overlay overlay results pairs variables variable pairwise interacting variable","code":""},{"path":"https://stscl.github.io/esp/reference/fuzzyoverlay2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"spatial fuzzy overlay between variables pairwise — fuzzyoverlay2","text":"","code":"sim = tibble::tibble(y = stats::runif(7,0,10),                      x1 = c(1,rep(2,3),rep(3,3)),                      x2 = c(rep(1,2),rep(2,2),rep(3,3)),                      x3 = c(rep(1,3),rep(2,2),rep(3,2))) fo1 = fuzzyoverlay2(y ~ .,data = sim, method = 'and') fo1 #> $overlay #> # A tibble: 7 × 3 #>     xi1   xi2   xi3 #>   <int> <int> <int> #> 1     1     1     1 #> 2     3     3     1 #> 3     4     3     2 #> 4     4     4     4 #> 5     2     4     4 #> 6     2     2     3 #> 7     2     2     3 #>  #> $variable #> [1] \"x1 ∩ x2\" \"x1 ∩ x3\" \"x2 ∩ x3\" #>  fo2 = fuzzyoverlay2(y ~ .,data = sim, method = 'or') fo2 #> $overlay #> # A tibble: 7 × 3 #>     xi1   xi2   xi3 #>   <int> <int> <int> #> 1     3     3     3 #> 2     1     1     3 #> 3     1     1     3 #> 4     1     1     1 #> 5     2     2     2 #> 6     2     4     4 #> 7     2     4     4 #>  #> $variable #> [1] \"x1 ∩ x2\" \"x1 ∩ x3\" \"x2 ∩ x3\" #>  fo3 = fuzzyoverlay2(y ~ .,data = sim, method = 'intersection') fo3 #> $overlay #> # A tibble: 7 × 3 #>     xi1   xi2   xi3 #>   <int> <int> <int> #> 1     1     1     1 #> 2     2     2     1 #> 3     3     2     2 #> 4     3     3     3 #> 5     4     4     4 #> 6     4     5     5 #> 7     4     5     5 #>  #> $variable #> [1] \"x1 ∩ x2\" \"x1 ∩ x3\" \"x2 ∩ x3\" #>"},{"path":"https://stscl.github.io/esp/reference/gwr_betas.html","id":null,"dir":"Reference","previous_headings":"","what":"estimate gwr model coefficients — gwr_betas","title":"estimate gwr model coefficients — gwr_betas","text":"estimate gwr model coefficients","code":""},{"path":"https://stscl.github.io/esp/reference/gwr_betas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"estimate gwr model coefficients — gwr_betas","text":"","code":"gwr_betas(   formula,   data,   bw = \"AIC\",   adaptive = TRUE,   kernel = \"gaussian\",   intercept = FALSE )"},{"path":"https://stscl.github.io/esp/reference/gwr_betas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"estimate gwr model coefficients — gwr_betas","text":"formula formula gwr model. data sf object observation data bw (optional) bandwidth used selecting models. optimal bandwidth can selected using one two methods: AIC, CV. Default use AIC. adaptive (optional) Whether bandwidth value adaptive . Default TRUE. kernel (optional) Kernel function. Default gaussian. intercept (optional) Whether include intercept term coefficient tibble. Default FALSE`.","code":""},{"path":"https://stscl.github.io/esp/reference/gwr_betas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"estimate gwr model coefficients — gwr_betas","text":"tibble","code":""},{"path":"https://stscl.github.io/esp/reference/gwr_betas.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"estimate gwr model coefficients — gwr_betas","text":"","code":"# \\donttest{ depression = system.file('extdata/Depression.csv',package = 'gdverse') |>   readr::read_csv() |>   sf::st_as_sf(coords = c('X','Y'), crs = 4326) #> Rows: 1072 Columns: 13 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> dbl (13): X, Y, Depression_prevelence, PopulationDensity, Population65, NoHe... #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. gwr_betas(Depression_prevelence ~ ., data = depression) #> # A tibble: 1,072 × 10 #>    PopulationDensity Population65 NoHealthInsurance Neighbor_Disadvantage #>                <dbl>        <dbl>             <dbl>                 <dbl> #>  1         -0.00117       -0.0746            0.0681                 0.493 #>  2         -0.00123       -0.0861            0.0826                 0.546 #>  3         -0.00124       -0.0963            0.0999                 0.816 #>  4         -0.00120       -0.102             0.0882                 0.334 #>  5         -0.00116       -0.105             0.0931                 0.271 #>  6         -0.00121       -0.103             0.0919                 0.611 #>  7         -0.000301      -0.122             0.0801                 0.248 #>  8         -0.000261      -0.104             0.113                  0.394 #>  9         -0.000608      -0.0873            0.133                  0.851 #> 10         -0.000668      -0.0831            0.139                  0.812 #> # ℹ 1,062 more rows #> # ℹ 6 more variables: Beer <dbl>, MentalHealthPati <dbl>, NatureParks <dbl>, #> #   Casinos <dbl>, DrinkingPlaces <dbl>, X.HouseRent <dbl> gwr_betas(Depression_prevelence ~ ., data = depression, intercept = TRUE) #> # A tibble: 1,072 × 11 #>    Intercept PopulationDensity Population65 NoHealthInsurance #>        <dbl>             <dbl>        <dbl>             <dbl> #>  1      24.0         -0.00117       -0.0746            0.0681 #>  2      23.7         -0.00123       -0.0861            0.0826 #>  3      23.4         -0.00124       -0.0963            0.0999 #>  4      23.7         -0.00120       -0.102             0.0882 #>  5      23.4         -0.00116       -0.105             0.0931 #>  6      23.4         -0.00121       -0.103             0.0919 #>  7      22.6         -0.000301      -0.122             0.0801 #>  8      22.0         -0.000261      -0.104             0.113  #>  9      20.5         -0.000608      -0.0873            0.133  #> 10      20.6         -0.000668      -0.0831            0.139  #> # ℹ 1,062 more rows #> # ℹ 7 more variables: Neighbor_Disadvantage <dbl>, Beer <dbl>, #> #   MentalHealthPati <dbl>, NatureParks <dbl>, Casinos <dbl>, #> #   DrinkingPlaces <dbl>, X.HouseRent <dbl> # }"},{"path":"https://stscl.github.io/esp/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://stscl.github.io/esp/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://stscl.github.io/esp/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"NULL (magrittr pipe operator)","code":""},{"path":"https://stscl.github.io/esp/news/index.html","id":"esp-010","dir":"Changelog","previous_headings":"","what":"esp 0.1.0","title":"esp 0.1.0","text":"First stable release.","code":""}]
